openapi: 3.0.3
info:
  title: t2authopenapi
  description: API para Creación y Autenticación de Usuarios
  version: 1.0.1-Snapshot
  x-java-version: "17"
  x-maven-groupId: com.gcs
  x-maven-artifactId: t2authopenapi
tags:
  - name: user
    description: Gestión de usuarios
  - name: auth
    description: Autenticación de usuarios
paths:
  /user/create:
    post:
      tags:
        - user
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserReqDto'
      responses:
        '200':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserRespDto'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRespDto'
              examples:
                validation_error:
                  value:
                    message: "El nombre de usuario debe tener entre 3 y 50 caracteres"
                    date: "2024-03-20T15:30:00Z"
                invalid_email:
                  value:
                    message: "El formato del correo electrónico es inválido"
                    date: "2024-03-20T15:30:00Z"
        '409':
          description: Conflicto - El usuario ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRespDto'
              example:
                message: "Ya existe un usuario con ese nombre de usuario o correo"
                date: "2024-03-20T15:30:00Z"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRespDto'
              example:
                message: "Error interno del servidor. Por favor, intente más tarde"
                date: "2024-03-20T15:30:00Z"
  /auth/login:
    post:
      tags:
        - auth
      summary: Iniciar sesión del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginReqDto'
      responses:
        '200':
          description: Usuario autenticado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginRespDto'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRespDto'
              examples:
                validation_error:
                  value:
                    message: "El nombre de usuario debe tener entre 3 y 50 caracteres"
                    date: "2024-03-20T15:30:00Z"
                invalid_credentials:
                  value:
                    message: "Credenciales inválidas"
                    date: "2024-03-20T15:30:00Z"
        '401':
          description: No autorizado - Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRespDto'
              example:
                message: "Usuario o contraseña incorrectos"
                date: "2024-03-20T15:30:00Z"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRespDto'
              example:
                message: "Error interno del servidor. Por favor, intente más tarde"
                date: "2024-03-20T15:30:00Z"
components:
  schemas:
    UserLoginReqDto:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 50
          description: Nombre de usuario
        password:
          type: string
          format: password
          minLength: 8
          description: Contraseña del usuario
      example:
        username: "john_doe"
        password: "secretPassword123"
    UserLoginRespDto:
      type: object
      properties:
        token:
          type: string
    CreateUserReqDto:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
          description: Nombre de usuario único
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        password:
          type: string
          format: password
          minLength: 8
          description: Contraseña del usuario
      example:
        username: "john_doe"
        email: "john@example.com"
        password: "secretPassword123"
    CreateUserRespDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        created_on:
          type: string
          format: date-time
    ErrorRespDto:
      type: object
      required:
        - message
        - date
      properties:
        message:
          type: string
          description: Mensaje descriptivo del error
        date:
          type: string
          format: date-time
          description: Fecha y hora del error
      example:
        message: "El usuario ya existe"
        date: "2024-03-20T15:30:00Z" 
        