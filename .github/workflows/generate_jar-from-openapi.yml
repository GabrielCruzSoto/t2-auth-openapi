name: publishJar
on:
  push:
    branches: 
      - "master"
    tags: 
      - '*'
  pull_request:
    branches: 
      - "master"
  workflow_dispatch:
jobs:

  generate-springboot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PROJECT_PATH: generated-project


    steps:
    - uses: actions/checkout@v3
    
    - name: Extraer TAG
      run: |
        TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
        echo "TAG=$TAG" >> $GITHUB_ENV
        echo "TAG extraído: $TAG"  # Imprimir el TAG para verificar

    - name: Descargar OpenAPI Generator CLI
      run: |
        wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.9.0/openapi-generator-cli-7.9.0.jar -O openapi-generator-cli.jar
    
    - name: Generar proyecto Spring Boot
      run: |
        java -jar openapi-generator-cli.jar generate \
        -i src/openapi.yaml \
        -g spring \
        -o generated-project \
        --artifact-id t2authopenapi \
        --group-id "com.gcs" \
        --package-name "com.gcs.t2authopenapi" \
        --artifact-version "${TAG}" \
        --additional-properties=useSpringBoot3=true \
        --additional-properties=java17=true \
        --additional-properties=useJakarta=true \
        --additional-properties=interfaceOnly=true \
        --additional-properties=openApiNullable=false \
        --additional-properties=documentationProvider=springdoc
        
    - name: Instalar Maven
      run: |
        sudo apt-get update
        sudo apt-get install maven -y

    - name: Configurar Java 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    #- name: Instalar Java 17
    #  run: |
    #    sudo apt-get update
    #    sudo apt-get install openjdk-17-jdk -y
    #    java -version  # Verificar la instalación de Java
    #    mvn -version   # Verificar la instalación de Maven

    - name: Compile JAR
      run: |    
        cd generated-project
        mvn clean package -Djar.finalName=t2authopenapi_${TAG}
 
    - name: Verificar autenticación en GitHub Packages
      run: |
        ls -la
       
    - name: Publicar JAR en GitHub Packages
      run: |
        cd generated-project
        mvn deploy:deploy-file \
          -DgroupId="com.gcs" \
          -DartifactId="t2authopenapi" \
          -Dversion=${TAG} \
          -Dtag=${TAG} \
          -Dfile=target/t2authopenapi-${TAG}.jar \
          -DrepositoryId=github \
          -Durl="https://maven.pkg.github.com/${GITHUB_REPOSITORY}" \
          -Dusername="${{ github.actor }}" \
          -Dpassword="${{ secrets.GITHUB_TOKEN }}" \
          -e \
          -X

