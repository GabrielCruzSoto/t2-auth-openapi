name: publishJar
on:
  push:
    branches: [ "master" ]
    tags: 
      - 'v*'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
jobs:

  generate-springboot:
    runs-on: ubuntu-latest
    env:
      GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}  # Define la variable de entorno

    steps:
    - uses: actions/checkout@v3
    - name: Configurar credenciales de GitHub Packages
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Descargar OpenAPI Generator CLI
      run: |
        wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.9.0/openapi-generator-cli-7.9.0.jar -O openapi-generator-cli.jar
    - name: Generar proyecto Spring Boot
      run: |
        java -jar openapi-generator-cli.jar generate -i src/openapi.yaml -g spring -o generated-project \
        --artifact-id t2authopenapi \
        --group-id "com.gcs" \
        --package-name "com.gcs.t2authopenapi" \
        --artifact-version "${GITHUB_REF##*/}"  # Usar el tag como versi√≥n
        
    - name: Instalar Maven
      run: |
        sudo apt-get update
        sudo apt-get install maven -y
        
    - name: Construir y publicar proyecto Spring Boot
      run: |
        cd generated-project
        mvn clean deploy --settings settings.xml
